<!-- tag::jwt[] -->
<server description="Sample Liberty server">

    <featureManager>
        <feature>jaxrs-2.1</feature>
        <feature>jsonp-1.1</feature>
        <feature>jsf-2.3</feature>
        <!-- FOR SECURITY -->
        <feature>appSecurity-3.0</feature>
        <feature>servlet-4.0</feature>
        <feature>jwt-1.0</feature>
    </featureManager>

    <httpEndpoint httpPort="${server.http.port}" httpsPort="${server.https.port}" id="defaultHttpEndpoint" />

    <!-- The keystore for SSL is built using the maven keytool plugin -->
    <keyStore id="defaultKeyStore" location="keystore.jceks" type="JCEKS" password="secret" />

    <basicRegistry id="basic" realm="WebRealm">
        <user name="bob" password="{xor}PTA9Lyg7" />  <!-- bobpwd -->
        <user name="alice" password="{xor}PjM2PDovKDs=" />  <!-- alicepwd -->
        <user name="carl" password="{xor}PD4tMy8oOw==" />   <!-- carlpwd -->

        <group name="myAdmins">
            <member name="bob" />
        </group>

        <group name="myUsers">
            <member name="bob" />
            <member name="alice" />
            <member name="carl" />
        </group>
    </basicRegistry>

    <application location="${application.name}" type="war" id="${application.name}"
                 name="${application.name}" context-root="/">
        <application-bnd>
            <security-role name="admin">
                <group name="myAdmins" />
            </security-role>
            <security-role name="user">
                <group name="myUsers" />
            </security-role>
        </application-bnd>
    </application>

    <!-- This JWT builder is used to build a JWT for an authenticated user.
             JWTs generated by this builder contain
             the user name and roles of the authenticated user. -->
    <jwtBuilder id="jwtFrontEndBuilder" issuer="${jwt.issuer}" expiry="24h"
                keyAlias="default" audiences="simpleapp"/>

</server>
<!-- end::jwt[] -->
